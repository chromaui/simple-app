{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./source/client-utils/client-constants.ts","webpack:///./source/client.ts","webpack:///./source/client-utils/client-utilities.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","RECONNECT_ATTEMPTS","RECONNECT_RETRY_MS","NORMAL_CLOSURE_CODE","YELLOW","RED","BLUE","GRAY","DEV_SERVER_PREFIX","DEV_SERVER_MODAL","client_constants_1","client_utilities_1","appUpdate","win","doc","buildResults","appErrorElm","getElementById","parentNode","removeChild","clearDevServerModal","hasError","appError","hmr","logReload","location","reload","e","console","error","window","ready","clientWs","reconnectTmrId","requestBuildResultsTmrId","wsUrl","getSocketUrl","STENCIL_DEV_PROTOCOL","STENCIL_DEV_HOST","STENCIL_DEV_PORT","reconnectAttempts","hasGottenBuildResults","onOpen","_this","this","updateBuildStatus","setInterval","readyState","WebSocket","OPEN","clearInterval","send","JSON","stringify","requestBuildResults","clearTimeout","onError","queueReconnect","onClose","event","code","logWarn","reason","logDisabled","onMessage","msg","parse","data","isActivelyBuilding","buildLog","statusMsg","CustomEvent","detail","dispatchEvent","connect","addEventListener","CONNECTING","close","removeEventListener","setTimeout","initClientWebSocket","document","prefix","log","logDiagnostic","diagnostic","color","level","header","relFilePath","lineNumber","columnNumber","messageText","styledPrefix","apply","concat","status","getDevServerModal","outer","createElement","id","body","appendChild","innerHTML","escapeHtml","unsafe","toString","replace","titleCase","str","charAt","toUpperCase","substr","eachLineHasLeadingWhitespace","lines","length","text","firstChar","appendDiagnostic","modal","card","className","masthead","title","type","textContent","message","file","fileHeader","absFilePath","parts","split","fileName","pop","filePath","join","blob","table_1","orgLines","i_1","errorCharStart","prepareLines","forEach","tr","tdNum","setAttribute","tdCode","errorLength","errorCharEnd","map","inputChar","charIndex","outputChar","highlightError","fn","logBuild","protocol","hostname","port","Array","isArray","diagnostics","filter"],"mappings":"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","file":"stencil-utilities/public-assets/stencil.client.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const RECONNECT_ATTEMPTS = 500;\nexport const RECONNECT_RETRY_MS = 2500;\nexport const NORMAL_CLOSURE_CODE = 1000;\nexport const YELLOW = '#f39c12';\nexport const RED = '#c0392b';\nexport const BLUE = '#3498db';\nexport const GRAY = '#717171';\nexport const DEV_SERVER_PREFIX = 'stencil-dev';\nexport const DEV_SERVER_MODAL = `${DEV_SERVER_PREFIX}-server-modal`;\n","import {\n  DEV_SERVER_MODAL,\n  NORMAL_CLOSURE_CODE,\n  RECONNECT_ATTEMPTS,\n  RECONNECT_RETRY_MS,\n} from './client-utils/client-constants';\n\nimport {\n  logWarn,\n  logReload,\n  logDisabled,\n  getSocketUrl,\n  ready,\n  updateBuildStatus,\n  appError,\n} from './client-utils/client-utilities';\n\nimport './client.less';\n\n/**\n * Remove the error modal\n * @param doc the document object\n */\nfunction clearDevServerModal(doc) {\n  var appErrorElm = doc.getElementById(DEV_SERVER_MODAL);\n  if (appErrorElm) {\n    appErrorElm.parentNode.removeChild(appErrorElm);\n  }\n}\n\nfunction appUpdate(win, doc, buildResults) {\n  try {\n    // remove any app errors that may already be showing\n    clearDevServerModal(doc);\n    if (buildResults.hasError) {\n      // looks like we've got an error\n      // let's show the error all pretty like\n      appError(doc, buildResults);\n      return;\n    }\n    if (buildResults.hmr) {\n      logReload('Reloading due to changes in Stencil!!');\n      win.location.reload(true);\n      return;\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n/**\n * Initialize websocket to connect to stencil server\n * @param win The window object\n * @param doc The document object\n */\nfunction initClientWebSocket(win, doc) {\n  // Websocket url to test\n  let wsUrl: string = getSocketUrl(\n    win.STENCIL_DEV_PROTOCOL,\n    win.STENCIL_DEV_HOST,\n    win.STENCIL_DEV_PORT,\n  );\n  // Websocket instance\n  let clientWs: any;\n  // Websocket reconnection timer\n  let reconnectTmrId: any;\n  // Websocket reconnection attempts\n  let reconnectAttempts: number = 0;\n\n  let requestBuildResultsTmrId: any;\n  let hasGottenBuildResults: boolean = false;\n\n  /**\n   * Function callback on socket open event\n   */\n  function onOpen() {\n    var _this = this;\n    if (reconnectAttempts > 0) {\n      // we just reconnected\n      // we'll request the build results and wait on its response\n      updateBuildStatus(doc, 'pending');\n    }\n    if (!hasGottenBuildResults) {\n      requestBuildResultsTmrId = setInterval(function() {\n        if (!hasGottenBuildResults && _this.readyState === win.WebSocket.OPEN) {\n          var msg = {\n            requestBuildResults: true,\n          };\n          _this.send(JSON.stringify(msg));\n        } else {\n          clearInterval(requestBuildResultsTmrId);\n        }\n      }, 1000);\n    }\n    // we just connected, let's just\n    // double check we don't have a reconnect queued\n    clearTimeout(reconnectTmrId);\n  }\n  function onError() {\n    // looks like we can't connect to the server\n    // let's give it another shot in a few seconds\n    queueReconnect();\n  }\n  function onClose(event) {\n    updateBuildStatus(doc, 'disabled');\n    if (event.code > NORMAL_CLOSURE_CODE) {\n      // the browser's web socket has closed w/ an unexpected code\n      logWarn('Dev Server', 'web socket closed: ' + event.code + ' ' + event.reason);\n    } else {\n      logDisabled('Dev Server', 'Disconnected, attempting to reconnect...');\n    }\n    // web socket closed, let's try to reconnect\n    queueReconnect();\n  }\n  function onMessage(event) {\n    // the browser's web socket received a message from the server\n    var msg = JSON.parse(event.data);\n    if (reconnectAttempts > 0) {\n      // we got a message and we know we've been trying to reconnect\n      if (msg.isActivelyBuilding) {\n        // looks like there's still an active build\n        return;\n      }\n      if (msg.buildResults) {\n        // this is from a reconnect, and we were just notified w/ build results\n        // so it's probably best if we do a full page refresh\n        logReload('Reconnected to dev server');\n        hasGottenBuildResults = true;\n        clearInterval(requestBuildResultsTmrId);\n        win.location.reload(true);\n        return;\n      }\n    }\n    if (msg.buildLog) {\n      var statusMsg = new win.CustomEvent('buildLog', { detail: msg.buildLog });\n      win.dispatchEvent(statusMsg);\n      updateBuildStatus(doc, 'pending');\n      return;\n    }\n    if (msg.buildResults) {\n      // we just got build results from the server\n      // let's update our app with the data received\n      hasGottenBuildResults = true;\n      clearInterval(requestBuildResultsTmrId);\n      updateBuildStatus(doc, 'default');\n      appUpdate(win, doc, msg.buildResults);\n      return;\n    }\n  }\n  function connect() {\n    // ensure we don't have a reconnect timeout running\n    clearTimeout(reconnectTmrId);\n    // have the browser open a web socket with the server\n    clientWs = new win.WebSocket(wsUrl, ['xmpp']);\n    // add all our event listeners to our new web socket\n    clientWs.addEventListener('open', onOpen);\n    clientWs.addEventListener('error', onError);\n    clientWs.addEventListener('close', onClose);\n    clientWs.addEventListener('message', onMessage);\n  }\n  function queueReconnect() {\n    // either it closed or was a connection error\n    hasGottenBuildResults = false;\n    // let's clear out the existing web socket\n    if (clientWs) {\n      if (\n        clientWs.readyState === win.WebSocket.OPEN ||\n        clientWs.readyState === win.WebSocket.CONNECTING\n      ) {\n        // probably fine as is, but let's double check we're closed out\n        clientWs.close(NORMAL_CLOSURE_CODE);\n      }\n      // let's remove all the existing event listeners\n      clientWs.removeEventListener('open', onOpen);\n      clientWs.removeEventListener('error', onError);\n      clientWs.removeEventListener('close', onClose);\n      clientWs.removeEventListener('message', onMessage);\n      clientWs = null;\n    }\n    // ensure clear out any other pending reconnect timeouts\n    clearTimeout(reconnectTmrId);\n    if (reconnectAttempts > RECONNECT_ATTEMPTS) {\n      logWarn('Dev Server', 'Canceling reconnect attempts');\n    } else {\n      // keep track how many times we tried to reconnect\n      reconnectAttempts++;\n      // queue up a reconnect in a few seconds\n      reconnectTmrId = setTimeout(connect, RECONNECT_RETRY_MS);\n      updateBuildStatus(doc, 'disabled');\n    }\n  }\n  // let's do this!\n  // try to connect up with our web socket server\n  connect();\n}\n\n// Custom window ready function\nwindow['ready'] = ready;\nwindow['ready'](function() {\n  initClientWebSocket(window, document);\n});\n","import { BLUE, GRAY, RED, YELLOW, DEV_SERVER_MODAL, DEV_SERVER_PREFIX } from './client-constants';\n\n/**\n * The vanilla JS to check if dom is loaded.\n * @param {function} fn Callback function\n */\nexport function ready(fn) {\n  if (document.readyState != 'loading') {\n    fn();\n  } else if (document.addEventListener) {\n    document.addEventListener('DOMContentLoaded', fn);\n  } else {\n    document['attachEvent']('onreadystatechange', function() {\n      if (document.readyState != 'loading') fn();\n    });\n  }\n}\n\n/**\n * Log build message styles\n * @param msg The message to be shown\n */\nexport function logBuild(msg) {\n  log(BLUE, 'Build', msg);\n}\n/**\n * Log reload message\n * @param msg The message to be shown\n */\nexport function logReload(msg) {\n  logWarn('Reload', msg);\n}\n/**\n * Log warning message style\n * @param prefix The message prefeix\n * @param msg The message to be shown\n */\nexport function logWarn(prefix, msg) {\n  log(YELLOW, prefix, msg);\n}\n/**\n * Log disabled message style\n * @param prefix The message prefix\n * @param msg The message to be shown\n */\nexport function logDisabled(prefix, msg) {\n  log(GRAY, prefix, msg);\n}\n/**\n * Log the diagnostic data to the console\n * @param diagnostic The diagnostic object returned by the websocket\n */\nexport function logDiagnostic(diagnostic) {\n  let color = RED;\n  let prefix = 'Error';\n  if (diagnostic.level === 'warn') {\n    color = YELLOW;\n    prefix = 'Warning';\n  }\n  if (diagnostic.header) {\n    prefix = diagnostic.header;\n  }\n  let msg = '';\n  if (diagnostic.relFilePath) {\n    msg += diagnostic.relFilePath;\n    if (typeof diagnostic.lineNumber === 'number' && diagnostic.lineNumber > 0) {\n      msg += ', line ' + diagnostic.lineNumber;\n      if (typeof diagnostic.columnNumber === 'number' && diagnostic.columnNumber > 0) {\n        msg += ', column ' + diagnostic.columnNumber;\n      }\n    }\n    msg += '\\n';\n  }\n  msg += diagnostic.messageText;\n  log(color, prefix, msg);\n}\n/**\n * Base logger function to display data in the console\n * @param color The message intesity color\n * @param prefix The message prefix\n * @param msg The message to be shown\n */\nexport function log(color, prefix, msg) {\n  const styledPrefix = [\n    '%c' + prefix,\n    'background: ' +\n      color +\n      '; color: white; padding: 2px 3px; border-radius: 2px; font-size: 0.8em;',\n  ];\n  console.log.apply(console, styledPrefix.concat([msg]));\n}\n\n/**\n * Function to get the websocket client.\n * @param {string} protocol The stencil server protocol\n * @param {string} hostname The stencil server hostname\n * @param {number|string} port The stencil server port\n */\nexport function getSocketUrl(protocol, hostname, port) {\n  return (protocol === 'https:' ? 'wss:' : 'ws:') + '//' + hostname + ':' + port + '/';\n}\n\n/**\n * Function to notify developer about any build\n * @param doc The document object\n * @param status The build status\n */\nexport function updateBuildStatus(doc, status) {\n  // @TODO:Update the dom to reflect different build statuses\n  // -----\n}\n/**\n * Return the diagnostic modal adding styles to it\n * @param doc The document object\n */\nexport function getDevServerModal(doc) {\n  var outer = doc.getElementById(DEV_SERVER_MODAL);\n  if (!outer) {\n    outer = doc.createElement('div');\n    outer.id = DEV_SERVER_MODAL;\n    doc.body.appendChild(outer);\n  }\n  outer.innerHTML = `\n    <style>\n        #${DEV_SERVER_MODAL} {\n            display: none;\n        }\n    </style>\n    <link href=\"/stencil.client.css\" rel=\"stylesheet\">\n    <div id=\"${DEV_SERVER_MODAL}-inner\"></div>\n  `;\n  return doc.getElementById(`${DEV_SERVER_MODAL}-inner`);\n}\n\n/**\n * Escape potentially unsafe html before setting innerHTML on DOM node\n * @param unsafe The unsafe html string to parse\n */\nfunction escapeHtml(unsafe) {\n  if (typeof unsafe === 'number' || typeof unsafe === 'boolean') {\n    return unsafe.toString();\n  }\n  if (typeof unsafe === 'string') {\n    return unsafe\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#039;');\n  }\n  return '';\n}\n\n/**\n * Titlecase the input string\n * @param str The string to convert\n */\nfunction titleCase(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n}\n\n/**\n * Highlight the input string\n * @param text The text to be checked\n * @param errorCharStart Location to highlight from\n * @param errorLength Length to highlight to\n */\nfunction highlightError(text, errorCharStart, errorLength) {\n  if (typeof text !== 'string') {\n    return '';\n  }\n  var errorCharEnd = errorCharStart + errorLength;\n  return text\n    .split('')\n    .map(function(inputChar, charIndex) {\n      var outputChar;\n      if (inputChar === '<') {\n        outputChar = '&lt;';\n      } else if (inputChar === '>') {\n        outputChar = '&gt;';\n      } else if (inputChar === '\"') {\n        outputChar = '&quot;';\n      } else if (inputChar === \"'\") {\n        outputChar = '&#039;';\n      } else if (inputChar === '&') {\n        outputChar = '&amp;';\n      } else {\n        outputChar = inputChar;\n      }\n      if (charIndex >= errorCharStart && charIndex < errorCharEnd) {\n        outputChar = `<span class=\"${DEV_SERVER_PREFIX}-server-diagnostic-error-chr\">${outputChar}</span>`;\n      }\n      return outputChar;\n    })\n    .join('');\n}\n/**\n * Prepare error lines for rendering\n * @param orgLines The error lines to be display\n */\nfunction prepareLines(orgLines) {\n  var lines = JSON.parse(JSON.stringify(orgLines));\n  for (var i = 0; i < 100; i++) {\n    if (!eachLineHasLeadingWhitespace(lines)) {\n      return lines;\n    }\n    for (var i_1 = 0; i_1 < lines.length; i_1++) {\n      lines[i_1].text = lines[i_1].text.substr(1);\n      lines[i_1].errorCharStart--;\n      if (!lines[i_1].text.length) {\n        return lines;\n      }\n    }\n  }\n  return lines;\n}\n/**\n * Check if the error messages have white spaces\n * @param lines The error string to check\n */\nfunction eachLineHasLeadingWhitespace(lines) {\n  if (!lines.length) {\n    return false;\n  }\n  for (var i = 0; i < lines.length; i++) {\n    if (!lines[i].text || lines[i].text.length < 1) {\n      return false;\n    }\n    var firstChar = lines[i].text.charAt(0);\n    if (firstChar !== ' ' && firstChar !== '\\t') {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Update the diagnostic modal\n * @param doc The document object\n * @param modal The modal element\n * @param diagnostic The diagnostic object from the websocket\n */\nexport function appendDiagnostic(doc, modal, diagnostic) {\n  var card = doc.createElement('div');\n  card.className = `${DEV_SERVER_PREFIX}-server-diagnostic`;\n  var masthead = doc.createElement('div');\n  masthead.className = `${DEV_SERVER_PREFIX}-server-diagnostic-masthead`;\n  masthead.title = escapeHtml(diagnostic.type) + ' error: ' + escapeHtml(diagnostic.code);\n  card.appendChild(masthead);\n  var title = doc.createElement('div');\n  title.className = `${DEV_SERVER_PREFIX}-server-diagnostic-title`;\n  title.textContent = titleCase(diagnostic.type) + ' ' + titleCase(diagnostic.level);\n  masthead.appendChild(title);\n  var message = doc.createElement('div');\n  message.className = `${DEV_SERVER_PREFIX}-server-diagnostic-message`;\n  message.textContent = diagnostic.messageText;\n  masthead.appendChild(message);\n  var file = doc.createElement('div');\n  file.className = `${DEV_SERVER_PREFIX}-server-diagnostic-file`;\n  card.appendChild(file);\n  if (diagnostic.relFilePath) {\n    var fileHeader = doc.createElement('div');\n    fileHeader.className = `${DEV_SERVER_PREFIX}-server-diagnostic-file-header`;\n    if (diagnostic.absFilePath) {\n      fileHeader.title = escapeHtml(diagnostic.absFilePath);\n    }\n    var parts = diagnostic.relFilePath.split('/');\n    var fileName = doc.createElement('span');\n    fileName.className = `${DEV_SERVER_PREFIX}-server-diagnostic-file-name`;\n    fileName.textContent = parts.pop();\n    var filePath = doc.createElement('span');\n    filePath.className = `${DEV_SERVER_PREFIX}-server-diagnostic-file-path`;\n    filePath.textContent = parts.join('/') + '/';\n    fileHeader.appendChild(filePath);\n    fileHeader.appendChild(fileName);\n    file.appendChild(fileHeader);\n  }\n  if (diagnostic.lines && diagnostic.lines.length > 0) {\n    var blob = doc.createElement('div');\n    blob.className = `${DEV_SERVER_PREFIX}-server-diagnostic-blob`;\n    file.appendChild(blob);\n    var table_1 = doc.createElement('table');\n    table_1.className = `${DEV_SERVER_PREFIX}-server-diagnostic-table`;\n    blob.appendChild(table_1);\n    prepareLines(diagnostic.lines).forEach(function(l) {\n      var tr = doc.createElement('tr');\n      if (l.errorCharStart > -1) {\n        tr.className = `${DEV_SERVER_PREFIX}-server-diagnostic-error-line`;\n      }\n      table_1.appendChild(tr);\n      var tdNum = doc.createElement('td');\n      tdNum.className = `${DEV_SERVER_PREFIX}-server-diagnostic-blob-num`;\n      tdNum.setAttribute('data-line-number', l.lineNumber + '');\n      tr.appendChild(tdNum);\n      var tdCode = doc.createElement('td');\n      tdCode.className = `${DEV_SERVER_PREFIX}-server-diagnostic-blob-code`;\n      tdCode.innerHTML = highlightError(l.text, l.errorCharStart, l.errorLength);\n      tr.appendChild(tdCode);\n    });\n  }\n  modal.appendChild(card);\n}\n\n/**\n * Show app error\n * @param win The window object\n * @param doc The document object\n * @param buildResults The build results Object\n */\nexport function appError(doc, buildResults) {\n  if (!Array.isArray(buildResults.diagnostics)) {\n    return;\n  }\n  var diagnostics = buildResults.diagnostics.filter(function(diagnostic) {\n    return diagnostic.level === 'error';\n  });\n  if (diagnostics.length === 0) {\n    return;\n  }\n  var modal = getDevServerModal(doc);\n  diagnostics.forEach(function(diagnostic) {\n    logDiagnostic(diagnostic);\n    appendDiagnostic(doc, modal, diagnostic);\n  });\n  updateBuildStatus(doc, 'error');\n}\n"],"sourceRoot":""}